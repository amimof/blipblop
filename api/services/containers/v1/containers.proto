syntax = "proto3";

package blipblop.services.containers.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

option go_package = "github.com/amimof/blipblop/api/services/containers/v1;containers";

service ContainerService {
  rpc Get(GetContainerRequest) returns (GetContainerResponse) {};
	rpc List(ListContainerRequest) returns (ListContainerResponse) {
		option (google.api.http) = {
			get: "/api/v1/containers"
		};
	}
	rpc Create(CreateContainerRequest) returns (CreateContainerResponse) {};
	// rpc Update(UpdateContainerRequest) returns (UpdateContainerResponse);
	rpc Delete(DeleteContainerRequest) returns (google.protobuf.Empty) {};
}

message Container {
  string name = 1;
  map<string, string> labels = 2;
	google.protobuf.Timestamp created = 3;
	google.protobuf.Timestamp updated = 4;
	uint64 revision = 5;
	Config config = 6;
	Status status = 7;
}

message Status {
	string state = 1;
	string node = 2;
	string ip = 3;
}

message Config {
	string image = 1;
	repeated string args = 2;
	repeated string envvars = 3;
	repeated Mount mounts = 4;
	repeated Port ports = 5;
}

message Mount {
	string destination = 1;
	string type = 2;
	string source = 3;
	repeated string options = 4;
}

message Port {
	int32 hostport = 1;
	int32 containerport = 2;
	string protocol = 3;
	string hostip = 4;
}

message GetContainerRequest {
  string id = 1;
}

message GetContainerResponse {
	Container container = 1;
}

message CreateContainerRequest {
	Container container = 1;
}

message CreateContainerResponse {
	Container container = 1;
}

message DeleteContainerRequest {
	string id = 1;
}

message ListContainerRequest {
	map<string, string> selector = 1;
}

message ListContainerResponse {
	repeated Container containers = 1;
}