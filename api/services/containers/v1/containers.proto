syntax = "proto3";

package blipblop.services.containers.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "api/services/events/v1/events.proto";
import "api/types/v1/meta.proto";


option go_package = "github.com/amimof/blipblop/api/services/containers/v1;containers";

service ContainerService {
  rpc Get(GetContainerRequest) returns (GetContainerResponse) {
    option (google.api.http) = {
      get: "/api/v1/containers/{id}"
    };
	}
	rpc List(ListContainerRequest) returns (ListContainerResponse) {
		option (google.api.http) = {
			get: "/api/v1/containers"
		};
	}
	rpc Create(CreateContainerRequest) returns (CreateContainerResponse) {
    option (google.api.http) = {
      post: "/api/v1/containers"
      body: "container"
    };
	}
	rpc Update(UpdateContainerRequest) returns (UpdateContainerResponse) {
    option (google.api.http) = {
      put: "/api/v1/containers/{container.meta.name}"
      body: "container"
      additional_bindings {
        patch: "/api/v1/containers/{container.meta.name}"
        body: "container"
      }
    };
	}
	rpc Delete(DeleteContainerRequest) returns (DeleteContainerResponse) {
    option (google.api.http) = {
      delete: "/api/v1/containers/{id}"
    };
	}
	rpc Start(StartContainerRequest) returns (StartContainerResponse) {
    option (google.api.http) = {
      put: "/api/v1/containers/{id}/start"
    };
	}
	rpc Kill(KillContainerRequest) returns (KillContainerResponse) {
    option (google.api.http) = {
      put: "/api/v1/containers/{id}/kill"
    };
	}
}


message Container {
  blipblop.types.v1.Meta meta = 1;
  Config config = 2;
  Status status = 3;
  // repeated Event events = 4;
}

message Status {
	string phase = 1;
	string node = 2;
	string ip = 3;
  uint32 pid = 4;
  uint32 exitStatus = 5;
  google.protobuf.Timestamp exitTime = 6;
  string health = 7;
  string description = 8;
  TaskStatus taskStatus = 9;
}

message Config {
	string image = 1;
	repeated string args = 2;
	repeated string envvars = 3;
	repeated Mount mounts = 4;
	repeated PortMapping portMappings = 5;
}

message Mount {
	string destination = 1;
	string type = 2;
	string source = 3;
	repeated string options = 4;
}

message PortMapping {
	uint32 hostPort = 1;
	uint32 containerPort = 2;
	string protocol = 3;
	string hostIP = 4;
}

enum TaskStatus {
  Unknown = 0;
  // OK
  Created = 1;
  Killed = 2;
  Started = 3;

  // Errors
  ExecError = 4;
  ImagePullError = 5;
  CreateError = 6;
  KillError = 7;
  DeleteError = 8;
}

message Event {
  google.protobuf.Timestamp created = 1;
  blipblop.services.events.v1.EventType type = 2; 
  string description = 3;
}

message GetContainerRequest {
  string id = 1;
}

message GetContainerResponse {
	Container container = 1;
}

message CreateContainerRequest {
	Container container = 1;
}

message CreateContainerResponse {
	Container container = 1;
}

message UpdateContainerRequest {
  string id = 1;
  Container container = 2;
  google.protobuf.FieldMask update_mask = 3;
}

message UpdateContainerResponse {
  Container container = 1;
}

message DeleteContainerRequest {
	string id = 1;
}

message DeleteContainerResponse {
	string id = 1;
}

message ListContainerRequest {
	map<string, string> selector = 1;
}

message ListContainerResponse {
	repeated Container containers = 1;
}

message StartContainerRequest {
	string id = 1;
}

message StartContainerResponse {
	string id = 1;
}

message StopContainerRequest {
	string id = 1;
}

message StopContainerResponse {
	string id = 1;
}

message KillContainerRequest {
	string id = 1;
}

message KillContainerResponse {
	string id = 1;
}

