syntax = "proto3";

package blipblop.services.containers.v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

option go_package = "github.com/amimof/blipblop/api/services/events/v1;events";

service EventService {
  rpc Get(GetEventRequest) returns (GetEventResponse) {
    option (google.api.http) = {
      get: "/api/v1/events/{id}"
    };
  }
  rpc List(ListEventRequest) returns (ListEventResponse) {
		option (google.api.http) = {
			get: "/api/v1/events"
		};
  }
  rpc Delete(DeleteEventRequest) returns (DeleteEventResponse) {
    option (google.api.http) = {
      delete: "/api/v1/events/{id}"
    };
  }
  rpc Subscribe(SubscribeRequest) returns (stream Event) {}
  rpc Publish(PublishRequest) returns (PublishResponse) {}
}

message SubscribeRequest {
  string id = 1;
}

message Event {
  google.protobuf.Timestamp timestamp = 1;
  string id = 2;
  string event_id = 3;
  EventType type = 4;
}

enum EventType {
	ContainerCreate = 0;
	ContainerDelete = 1;
  ContainerUpdate = 2;
  ContainerStart = 3;
  ContainerGet = 5;
  ContainerList = 6;
  ContainerKill = 7;
  NodeGet = 8;
  NodeCreate = 9;
  NodeDelete = 10;
  NodeList = 11;
  NodeUpdate = 12;
  NodeJoin = 13;
  NodeForget = 14;
  ContainerStartError = 15;
}

message GetEventRequest {
  string id = 1;
}

message GetEventResponse {
  Event event = 1;
}

message ListEventRequest {
  map<string, string> selector = 1;
}

message ListEventResponse {
  repeated Event events = 1;
}

message DeleteEventRequest {
  string id = 1;
}

message DeleteEventResponse {
  string id = 1;
}

message PublishRequest {
  Event event = 1;
}

message PublishResponse {
  Event event = 1;
}
