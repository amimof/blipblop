{
  "swagger": "2.0",
  "info": {
    "title": "api/services/events/v1/events.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "EventService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/events": {
      "get": {
        "operationId": "EventService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "selector",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/api/v1/events/{id}": {
      "get": {
        "operationId": "EventService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EventService"
        ]
      },
      "delete": {
        "operationId": "EventService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1DeleteEventResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1Event": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/v1Meta"
        },
        "objectId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1EventType"
        }
      }
    },
    "v1EventType": {
      "type": "string",
      "enum": [
        "ContainerCreate",
        "ContainerDelete",
        "ContainerUpdate",
        "ContainerStart",
        "ContainerGet",
        "ContainerList",
        "ContainerKill",
        "ContainerStop",
        "NodeGet",
        "NodeCreate",
        "NodeDelete",
        "NodeList",
        "NodeUpdate",
        "NodeJoin",
        "NodeForget",
        "ContainerStartError",
        "ContainerStarted",
        "ContainerStopped",
        "ContainerDeleted"
      ],
      "default": "ContainerCreate"
    },
    "v1GetEventResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/v1Event"
        }
      }
    },
    "v1ListEventResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Event"
          }
        }
      }
    },
    "v1Meta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "created": {
          "type": "string",
          "format": "date"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "revision": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1PublishResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/v1Event"
        }
      }
    }
  }
}
