name: Release

on:
  push:
    tags:
      - "v*"
    branches:
      - "master"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  releases:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Build Server Binaries
        run: |
          GOOS=linux GOARCH=amd64 BINARY_NAME=blipblop-server-linux-amd64 make server
          GOOS=linux GOARCH=arm BINARY_NAME=blipblop-server-linux-arm make server
          GOOS=linux GOARCH=arm64 BINARY_NAME=blipblop-server-linux-arm64 make server
          GOOS=windows GOARCH=amd64 BINARY_NAME=blipblop-server-windows-amd64.exe make server
          GOOS=darwin GOARCH=amd64 BINARY_NAME=blipblop-server-darwin-amd64 make server
          GOOS=darwin GOARCH=arm64 BINARY_NAME=blipblop-server-darwin-arm64 make server

      - name: Build Node Binaries
        run: |
          GOOS=linux GOARCH=amd64 BINARY_NAME=blipblop-node-linux-amd64 make node
          GOOS=linux GOARCH=arm BINARY_NAME=blipblop-node-linux-arm make node
          GOOS=linux GOARCH=arm64 BINARY_NAME=blipblop-node-linux-arm64 make node

      - name: Build CLI Binaries
        run: |
          GOOS=linux GOARCH=amd64 BINARY_NAME=bbctl-linux-amd64 make bbctl
          GOOS=linux GOARCH=arm BINARY_NAME=bbctl-linux-arm make bbctl
          GOOS=linux GOARCH=arm64 BINARY_NAME=bbctl-linux-arm64 make bbctl
          GOOS=windows GOARCH=amd64 BINARY_NAME=bbctl-windows-amd64.exe make bbctl
          GOOS=darwin GOARCH=amd64 BINARY_NAME=bbctl-darwin-amd64 make bbctl
          GOOS=darwin GOARCH=arm64 BINARY_NAME=bbctl-darwin-arm64 make bbctl

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          draft: true
          artifacts: "./bin/*"

  packages:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@326560df218a7ea9cf6ab49bbc88b8b306bb437e

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6d5347c4025fdf2bb05167a2519cac535a14a408

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
